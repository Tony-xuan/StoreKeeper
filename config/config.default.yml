USED_CONFIG: DefaultConfig


DefaultConfig:
  App:
    NAME: "storekeeper"
    TITLE: "StoreKeeper"
    FORCED_LANGUAGE: NULL

    SHARE_STATIC: True

    ADMIN_PAGE: False
    ADMIN_MANAGE_STATIC: False

    # Set to DEFAULT for use default Cups printer
    LABEL_PRINTER: DEFAULT
    LABEL_BORDER: False
    PRINT_ONE_LABEL_PER_JOB: False

    BARCODE_PREFIX: "SK"
    BARCODE_NUMBERS: 6

    CURRENCY: "$$"

  Flask:
    DEBUG: False
    TESTING: False

    # http://flask.pocoo.org/docs/0.10/config/
    SECRET_KEY: PleaseChangeThisImportantSecretString

    # https://flask-login.readthedocs.org/en/latest/
    LOGIN_DISABLED: False
    SESSION_PROTECTION: strong
    REMEMBER_COOKIE_DURATION: 90

    # https://pythonhosted.org/Flask-SQLAlchemy/config.html
    SQLALCHEMY_DATABASE_URI: "sqlite:///$SERVER/app.sqlite"
    SQLALCHEMY_TRACK_MODIFICATIONS: False

    # https://pythonhosted.org/Flask-Mail/#configuring-flask-mail
    MAIL_SERVER: bar.com
    MAIL_PORT: 25
    MAIL_USE_TLS: False
    MAIL_USE_SSL: False
    MAIL_USERNAME: NULL
    MAIL_PASSWORD: NULL
    MAIL_DEFAULT_SENDER: no-reply@storekeeper


  Log:
    # The log level (LEVEL) should be: CRITICAL, ERROR, WARNING, INFO, DEBUG, NOTSET
    #
    # Available attributes in format strings (SUBJECT_FORMAT, MESSAGE_FORMAT):
    #   https://docs.python.org/3.4/library/logging.html#logrecord-attributes
    #   source of LogValuesInjectorFilter class (server/app/modules/log_filters.py)

    ToFile:
      ENABLED: False
      LEVEL: INFO
      MESSAGE_FORMAT: "%(asctime)s %(levelname)s: %(message)s [in %(pathname)s:%(lineno)d]"

      PATH: "$SERVER/tmp/storekeeper.log"
      MAX_SIXE_IN_MB: 10
      HOLD_COUNT: 5

    ToEmail:
      ENABLED: False
      LEVEL: ERROR
      SUBJECT_FORMAT: "%(app_title)s %(levelname)s: %(request_path)s"
      MESSAGE_FORMAT: |
        ### Process ###
        Process:            %(processName)s[%(process)d]
        Thread:             %(threadName)s[%(thread)d]
        Time:               %(relativeCreated)d ms from start (%(asctime)s)

        ### Code ###
        Version:            %(app_release)s
        Location:           %(pathname)s:%(lineno)d
        Module:             %(name)s
        Function:           %(funcName)s

        ### Request ###
        Session:            %(user)s
        Request:            %(request_method)s %(request_url)s
        Referer:            %(request_referrer)s
        Client address:     %(client_address)s
        User agent:         %(client_user_agent)s
        Accept languages:   %(client_accept_languages)s

        ### Message ###
        %(levelname)s: %(message)s

        ### Exception info ###
        %(exc_info)s

        ### Stack info ###
        %(stack_info)s

      RECIPIENTS:
        - foo@bar.com

    ToSyslog:
      # The TRANSPORT should be: UDP, TCP

      ENABLED: False
      LEVEL: WARNING
      MESSAGE_FORMAT: "%(message)s"

      ADDRESS: log.bar
      TRANSPORT: TCP
      PORT: 514


ProductionConfig:
  Base: DefaultConfig

  App:
    SHARE_STATIC: False

  Flask:
    # SQLALCHEMY_DATABASE_URI: "mysql+pymysql://storekeeper:StoreKeeper@localhost/storekeeper"
    SQLALCHEMY_DATABASE_URI: "postgresql+psycopg2://storekeeper:StoreKeeper@localhost/storekeeper"

  Log:
    ToEmail:
      ENABLED: True


DevelopmentConfig:
  Base: DefaultConfig

  App:
    ADMIN_PAGE: True
    ADMIN_MANAGE_STATIC: True

  Flask:
    WTF_CSRF_ENABLED: False
    DEBUG: True

    # http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xvi-debugging-testing-and-profiling
    # SQLALCHEMY_RECORD_QUERIES: True
    SQLALCHEMY_ECHO: True


TestingConfig:
  Base: DefaultConfig

  App:
    NAME: "storekeeper"
    TITLE: "StoreKeeper"
    FORCED_LANGUAGE: NULL

    BARCODE_PREFIX: "SKT"
    BARCODE_NUMBERS: 5

    CURRENCY: "$$"

  Flask:
    WTF_CSRF_ENABLED: False
    TESTING: True

    # The right checker tests will override this settings
    LOGIN_DISABLED: True

    # Most of SQL related tests override this settings and use in-memory database, however tests of DatabaseMaintenance
    # class have to use file based database!
    SQLALCHEMY_DATABASE_URI: "sqlite:///$SERVER/tmp/test.sqlite"
