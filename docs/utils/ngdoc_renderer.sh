#!/bin/bash -e
BASEPATH="$(cd "$(dirname $0)/../../"; pwd)"
TEMP_DIR="${BASEPATH}/docs/tmp/ngdocs"
RST_DIR="${BASEPATH}/docs/client/api"

GRUNT="${BASEPATH}/client/node_modules/grunt-cli/bin/grunt"
PANDOC="${BASEPATH}/client/node_modules/pandoc-bin/vendor/pandoc"


function do_render_ngdoc()
{
    check_pandoc
    initialize_environment

    generate_markdowns_from_ngdocs
    convert_all_markdown_to_rst

    echo -e '\nDone'
}

function check_pandoc()
{
    if [ ! -e "${PANDOC}" ];
    then
        echo 'Missing pandoc'
        exit 1
    fi
}

function initialize_environment()
{
    echo -e "\n * initialize environment"

    purge "${TEMP_DIR}"
    mkdir -p "${TEMP_DIR}"

    find_and_purge "${RST_DIR}" -mindepth 1 ! -name index.rst
}

function generate_markdowns_from_ngdocs()
{
    echo -e "\n * generate markdowns from ngdocs"

    cd "${BASEPATH}/client"
    "${GRUNT}" dgeni --destination "${TEMP_DIR}"
}

function convert_all_markdown_to_rst()
{
    echo -e "\n * convert all markdown to reStructuredText"

    get_markdown_contained_directories |
        while read chapter_dir
        do
            local chapter_name="$(echo "${chapter_dir}" | sed 's>^.*/>>')"
            convert_markdowns_chapter_to_rst "${chapter_dir}" "${chapter_name}"
        done
}

function get_markdown_contained_directories()
{
    find "${TEMP_DIR}" -name '*.md' -type f |
        sed -E 's>^(.*/[^/]*)/[^/]*$>\1>' |
        sort |
        uniq
}

function convert_markdowns_chapter_to_rst()
{
    local chapter_dir="$1"
    local chapter_name="$2"

    local md_files_of_chapter="$(find "${chapter_dir}" -name '*.md')"

    echo "   * ${chapter_name}.rst"
    "${PANDOC}" -f markdown_github -t rst -o - --base-header-level 2 --chapters ${md_files_of_chapter} |
        fixup_rst_for_sphinx "${chapter_name}" > "${RST_DIR}/${chapter_name}.rst"
}

function fixup_rst_for_sphinx()
{
    local chapter_name="$1"

    local char='='
    local len=${#chapter_name}

    cat - << EOF
.. StoreKeeper documentation - generated by $(basename $0)

${chapter_name^}
$(printf '%*s' "${len}" | tr ' ' "${char}")

EOF
    cat - |
        sed 's>   ::$>.. code-block:: html>'
}


cd "$(dirname "$0")"
source ../../.main.sh
